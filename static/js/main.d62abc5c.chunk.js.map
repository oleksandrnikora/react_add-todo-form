{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","completed","title","cn","TodoList","todos","map","getUserById","usersFromServer","find","todosWithUsers","userId","App","useState","setTitle","setUserId","setTodos","isTitleEmpty","setIsTitleEmpty","isUserNotSelected","setIsUserNotSelected","Paper","sx","margin","width","elevation","action","method","onSubmit","event","preventDefault","trim","Math","max","newTodo","currentTodos","FormControl","fullWidth","htmlFor","TextField","type","value","onChange","target","placeholder","Select","MenuItem","disabled","Button","variant","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d62abc5c.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport { TodoWithUser } from '../../types/TodoWithUser';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: TodoWithUser,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    completed,\n    title,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={cn(\n        'TodoInfo',\n        { 'TodoInfo--completed': completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import { TodoWithUser } from '../../types/TodoWithUser';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: TodoWithUser[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n  </section>\n);\n","import './App.scss';\nimport {\n  Button,\n  Paper,\n  FormControl,\n  TextField,\n  MenuItem,\n} from '@mui/material';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\nimport React, { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoWithUser } from './types/TodoWithUser';\nimport { TodoList } from './components/TodoList';\n\nconst getUserById = (id: number) => {\n  return usersFromServer.find(user => user.id === id) || null;\n};\n\nconst todosWithUsers: TodoWithUser[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [todos, setTodos] = useState(todosWithUsers);\n  const [isTitleEmpty, setIsTitleEmpty] = useState(false);\n  const [isUserNotSelected, setIsUserNotSelected] = useState(false);\n\n  const changeTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setIsTitleEmpty(false);\n  };\n\n  const changeUser = (event: SelectChangeEvent<number>) => {\n    setUserId(+event.target.value);\n    setIsUserNotSelected(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setIsTitleEmpty(!title.trim());\n    setIsUserNotSelected(!userId);\n\n    if (userId && title.trim()) {\n      setTitle('');\n      setUserId(0);\n\n      const id = Math.max(...todos.map(todo => todo.id));\n\n      const newTodo = {\n        title,\n        userId: +userId,\n        completed: false,\n        id: id + 1,\n        user: getUserById(+userId),\n      };\n\n      setTodos((currentTodos) => [...currentTodos, newTodo]);\n    }\n\n    setIsTitleEmpty(!title.trim());\n    setIsUserNotSelected(!userId);\n  };\n\n  return (\n    <Paper\n      className=\"Paper\"\n      sx={{\n        margin: '0 auto',\n        width: 'max-content',\n      }}\n      elevation={23}\n    >\n      <div className=\"App\">\n        <h1>Add todo form</h1>\n\n        <form\n          className=\"Form\"\n          action=\"/api/users\"\n          method=\"POST\"\n          onSubmit={handleSubmit}\n        >\n          <div className=\"field\">\n            <FormControl fullWidth>\n              <label htmlFor=\"title\">\n                {'Title: '}\n              </label>\n\n              <TextField\n                id=\"title\"\n                type=\"text\"\n                data-cy=\"titleInput\"\n                value={title}\n                onChange={changeTitle}\n                placeholder=\"Enter a title\"\n              />\n            </FormControl>\n            {isTitleEmpty\n            && <span className=\"error\">Please enter a title</span>}\n          </div>\n\n          <div className=\"field\">\n            <label htmlFor=\"username\">\n              {'User: '}\n            </label>\n            <FormControl fullWidth>\n              <Select\n                data-cy=\"userSelect\"\n                value={userId}\n                onChange={changeUser}\n              >\n                <MenuItem value=\"0\" disabled>Choose a user</MenuItem>\n                {usersFromServer.map(user => (\n                  <MenuItem\n                    value={user.id}\n                    key={user.id}\n                  >\n                    {user.name}\n                  </MenuItem>\n                ))}\n\n              </Select>\n            </FormControl>\n            {isUserNotSelected\n              && <span className=\"error\">Please choose a user</span>}\n          </div>\n\n          <Button\n            className=\"Button\"\n            type=\"submit\"\n            data-cy=\"submitButton\"\n            variant=\"contained\"\n          >\n            Add\n          </Button>\n        </form>\n\n        <TodoList todos={todos} />\n      </div>\n    </Paper>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}